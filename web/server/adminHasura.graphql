query GetInviteLink($invite_link_id: uuid!) {
  space_invite_link_by_pk(id: $invite_link_id) {
    id
    expires_at
    created_at
    space_id
    type
  }
}

query GetSpace($space_id: uuid!) {
  space_by_pk(id: $space_id) {
    id
    owner_id
    name
    attributes
  }
}

mutation UpdateSpace($space_id: uuid!, $changes: space_set_input!) {
  update_space_by_pk(pk_columns: { id: $space_id }, _set: $changes) {
    id
    name
  }
}

query GetUser($user_id: String!) {
  user_by_pk(id: $user_id) {
    id
    email
    first_name
    last_name
    last_active_at
    attributes
  }
}

mutation UpsertUser(
  $id: String!
  $email: String!
  $first_name: String
  $last_name: String
  $last_active_at: timestamptz
  $update_columns: [user_update_column!]!
) {
  insert_user_one(
    object: {
      id: $id
      email: $email
      first_name: $first_name
      last_name: $last_name
      last_active_at: $last_active_at
    }
    on_conflict: { constraint: users_pkey, update_columns: $update_columns }
  ) {
    email
    id
    first_name
    last_name
  }
}

mutation UpdateUser($user_id: String!, $changes: user_set_input!) {
  update_user_by_pk(pk_columns: { id: $user_id }, _set: $changes) {
    id
    email
    first_name
    last_name
  }
}

mutation InsertProfile(
  $data: profile_insert_input!
  $on_conflict: profile_on_conflict
) {
  insert_profile_one(object: $data, on_conflict: $on_conflict) {
    id
    user_id
    space_id
  }
}

mutation UpdateProfile($profile_id: uuid!, $changes: profile_set_input!) {
  update_profile_by_pk(pk_columns: { id: $profile_id }, _set: $changes) {
    id
    user_id
    space_id
  }
}

mutation InsertImage($data: image_insert_input!) {
  insert_image_one(object: $data) {
    id
    url
  }
}

query GetProfile($profile_id: uuid!) {
  profile_by_pk(id: $profile_id) {
    id
    attributes
    profile_listing {
      id
      headline
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
    }
    user {
      id
      first_name
      last_name
      email
    }
    space {
      id
      name
      slug
    }
  }
}

query GetChatRoom($where: chat_room_bool_exp) {
  chat_room(where: $where) {
    id
  }
}

mutation InsertChatRoomOne($data: chat_room_insert_input!) {
  insert_chat_room_one(object: $data) {
    id
    chat_messages {
      id
    }
    profile_to_chat_rooms {
      id
      profile {
        id
        space {
          id
          name
          slug
        }
      }
    }
  }
}

mutation InsertConnectionRequest($data: connection_request_insert_input!) {
  insert_connection_request_one(object: $data) {
    id
    sender_profile_id
    receiver_profile_id
    created_at
    status
  }
}

query GetProfiles($where: profile_bool_exp) {
  profile(where: $where) {
    id
    attributes
    user {
      id
      first_name
      last_name
      email
    }
    space {
      id
      name
      slug
    }
    flattened_profile_roles {
      id
      profile_id
      profile_role
    }
    profile_roles {
      id
      profile_id
      profile_role
    }
    profile_listing {
      id
      headline
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
    }
  }
}

query GetUnreadMessagesCounts {
  profile(
    where: {
      past_hour_unread_messages_counts: { unread_messages_count: { _gt: 0 } }
    }
  ) {
    id
    user {
      id
    }
    past_hour_unread_messages_counts {
      unread_messages_count
      sender_profile {
        id
        user {
          id
          first_name
          last_name
          email
        }
        profile_listing {
          id
          headline
          profile_listing_image {
            id
            image {
              id
              url
            }
          }
        }
      }
    }
  }
}

mutation InsertChatIntro($data: chat_intro_insert_input!) {
  insert_chat_intro_one(object: $data) {
    id
    created_at
    creator_profile_id
    group_size
    num_groups_created
    space_id
  }
}

mutation InsertAnnouncement($object: announcement_insert_input!) {
  insert_announcement_one(object: $object) {
    id
    author_profile_id
    created_at
    deleted
    content
  }
}

query EmailsBySpaceId($where: profile_bool_exp) {
  profile(where: $where) {
    id
    user {
      id
      email
      type
    }
  }
}

mutation InsertReport($data: report_insert_input!) {
  insert_report_one(object: $data) {
    id
  }
}

mutation DeleteProfileListingsWithProfileId($profile_id: uuid!) {
  delete_profile_listing(where: { profile_id: { _eq: $profile_id } }) {
    affected_rows
    returning {
      id
    }
  }
}

query GetChatParticipants($chat_room_id: uuid!, $sender_profile_id: uuid!) {
  profile_to_chat_room(
    where: {
      _and: {
        chat_room_id: { _eq: $chat_room_id }
        _not: {
          profile: {
            blocked_profiles: {
              blocked_profile_id: { _eq: $sender_profile_id }
            }
          }
        }
      }
    }
  ) {
    id
    profile {
      id
      space_id
      user {
        id
        first_name
        last_name
        expo_push_token
        email
      }
    }
  }
}

mutation InsertChatMessage($data: chat_message_insert_input!) {
  insert_chat_message_one(object: $data) {
    id
  }
}

mutation UpdateProfile($profile_id: uuid!, $changes: profile_set_input!) {
  update_profile_by_pk(pk_columns: { id: $profile_id }, _set: $changes) {
    id
    user_id
    space_id
  }
}

mutation UpdateProfiles(
  $where: profile_bool_exp!
  $changes: profile_set_input!
) {
  update_profile(where: $where, _set: $changes) {
    affected_rows
  }
}

mutation UpdateProfileRoleRow(
  $row_id: uuid!
  $profile_role: profile_role_enum!
) {
  update_profile_to_profile_role_by_pk(
    pk_columns: { id: $row_id }
    _set: { profile_role: $profile_role }
  ) {
    id
    profile_role
    profile_id
  }
}

query GetUnreadMessagesPerChatRoom($since: timestamptz!) {
  profile(
    where: {
      profile_to_chat_rooms: {
        chat_room: {
          chat_messages: {
            created_at: { _gte: $since }
            sender_profile: { user: { type: { _eq: User } } }
          }
        }
      }
    }
  ) {
    id
    space {
      id
      name
      slug
    }
    user {
      id
      email
      first_name
      last_name
    }
    profile_to_chat_rooms {
      id
      chat_room_id
      latest_read_chat_message_id
      chat_room {
        id
        chat_messages(
          where: {
            created_at: { _gte: $since }
            sender_profile: { user: { type: { _eq: User } } }
          }
          order_by: { id: asc }
        ) {
          id
          text
          created_at
          reply_to_message_id
          reply_to_message {
            text
            sender_profile {
              id
              user {
                id
                first_name
              }
            }
          }
          sender_profile {
            id
            user {
              id
              first_name
              last_name
              email
            }
            profile_listing {
              headline
              profile_listing_image {
                image {
                  url
                }
              }
            }
          }
        }
        profile_to_chat_rooms {
          profile {
            id
            user {
              id
              first_name
              last_name
            }
          }
        }
      }
    }
  }
}

query GetPreviousPairings($space_id: uuid!) {
  chat_room(where: { chat_intro_id: { _is_null: false } }) {
    id
    chat_intro_id
    profile_to_chat_rooms(
      where: { profile: { space_id: { _eq: $space_id } } }
    ) {
      profile_id
    }
  }
}
